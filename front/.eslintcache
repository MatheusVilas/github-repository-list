[{"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/index.tsx":"1","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/api/index.ts":"2","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/helpers/getRandomColor.ts":"3","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Drawer.tsx":"4","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/index.tsx":"5","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Header.tsx":"6","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/RepositoryItem.tsx":"7","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/UrlParams.tsx":"8"},{"size":354,"mtime":1608297941424,"results":"9","hashOfConfig":"10"},{"size":720,"mtime":1608303143303,"results":"11","hashOfConfig":"10"},{"size":206,"mtime":1608173969332,"results":"12","hashOfConfig":"10"},{"size":3314,"mtime":1608304735990,"results":"13","hashOfConfig":"10"},{"size":2899,"mtime":1608299054623,"results":"14","hashOfConfig":"10"},{"size":3365,"mtime":1608299231977,"results":"15","hashOfConfig":"10"},{"size":4867,"mtime":1608303235618,"results":"16","hashOfConfig":"10"},{"size":1058,"mtime":1608298927236,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"cjmwwa",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/index.tsx",[],["37","38"],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/api/index.ts",[],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/helpers/getRandomColor.ts",[],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Drawer.tsx",["39"],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/index.tsx",[],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Header.tsx",["40"],"import React, { useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useDebounce } from \"use-debounce\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\ninterface HeaderProps {\n  openDrawer: () => void;\n  searchValue: string;\n  searchOnChange: any;\n  handleSubmit: () => void;\n}\n\nexport default function SearchAppBar({\n  openDrawer,\n  searchOnChange,\n  searchValue,\n  handleSubmit,\n}: HeaderProps) {\n  const classes = useStyles();\n\n  const [value] = useDebounce(searchValue, 1000);\n\n  useEffect(() => {\n    if (value === searchValue) return handleSubmit();\n  }, [value, searchValue]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Github Repositories List\n          </Typography>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              handleSubmit();\n            }}\n            className={classes.search}\n          >\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchValue}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(item) => searchOnChange(item.currentTarget.value)}\n            />\n          </form>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/RepositoryItem.tsx",["41","42","43"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport moment from \"moment-timezone\";\nimport { getRandomColor } from \"../helpers/getRandomColor\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport BugReportIcon from \"@material-ui/icons/BugReport\";\nimport { handleRepositoryStar } from \"../api\";\n\nexport default function RepositoryItem(props: any) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [randomColor] = React.useState(getRandomColor());\n  const [isStarred, setIsStarred] = React.useState(props.starred);\n  const [starCount, setStarCount] = React.useState(props.stargazers_count);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const lastUpdatedDate = moment(props.updated_at)\n    .tz(\"America/Sao_Paulo\")\n    .format(\"DD/MM/YYYY\");\n\n  function handleStarChange() {\n    handleRepositoryStar(props.full_name).then((success) => {\n      if (isStarred) {\n        if (starCount >= 1) setStarCount(starCount - 1);\n      } else {\n        setStarCount(starCount + 1);\n      }\n\n      setIsStarred(!isStarred);\n    });\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar\n            style={{ backgroundColor: randomColor }}\n            aria-label=\"recipe\"\n            className={classes.avatar}\n          >\n            {props.name.substring(0, 2)}\n          </Avatar>\n        }\n        action={\n          <a href={props.html_url} target=\"_blank\" aria-label=\"Link\">\n            <LinkIcon />\n          </a>\n        }\n        title={props.name}\n        subheader={`Atualizado: ${lastUpdatedDate}`}\n      />\n\n      <CardActions disableSpacing>\n        <IconButton\n          onClick={handleStarChange}\n          className={classes.wrapperIcon}\n          aria-label=\"Likes\"\n        >\n          {isStarred ? <StarIcon /> : <StarOutlineIcon />}\n\n          <Typography paragraph>{starCount}</Typography>\n        </IconButton>\n        <IconButton\n          style={{ pointerEvents: \"none\" }}\n          className={classes.wrapperIcon}\n          aria-label=\"Watchers\"\n        >\n          <VisibilityIcon />\n          <Typography paragraph>{props.watchers_count}</Typography>\n        </IconButton>\n        <IconButton\n          style={{ pointerEvents: \"none\" }}\n          className={classes.wrapperIcon}\n          aria-label=\"Issues\"\n        >\n          <BugReportIcon />\n          <Typography paragraph>{props.open_issues_count}</Typography>\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {props.description ? (\n            <>\n              <Typography className={classes.descriptionTitle} paragraph>\n                DescriÃ§Ã£o:\n              </Typography>\n              <Typography paragraph>{props.description}</Typography>\n            </>\n          ) : null}\n          <Typography className={classes.descriptionTitle} paragraph>\n            Linguagem:\n          </Typography>\n          <Typography paragraph>{props.language}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 550,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    textTransform: \"uppercase\",\n  },\n  wrapperIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  descriptionTitle: {\n    fontWeight: \"bold\",\n  },\n}));\n","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/UrlParams.tsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":38,"column":9,"nodeType":"50","messageId":"51","endLine":38,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":86,"column":6,"nodeType":"54","endLine":86,"endColumn":26,"suggestions":"55"},{"ruleId":"48","severity":1,"message":"56","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":17},{"ruleId":"48","severity":1,"message":"57","line":16,"column":8,"nodeType":"50","messageId":"51","endLine":16,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":65,"column":36,"nodeType":"60","endLine":65,"endColumn":51},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array. If 'handleSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["63"],"'CardMedia' is defined but never used.","'ShareIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [value, searchValue, handleSubmit]",{"range":"66","text":"67"},[2146,2166],"[value, searchValue, handleSubmit]"]