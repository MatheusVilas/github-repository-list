[{"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/index.tsx":"1","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/api/index.ts":"2","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/helpers/getRandomColor.ts":"3","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Drawer.tsx":"4","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/index.tsx":"5","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Header.tsx":"6","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/RepositoryItem.tsx":"7","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/UrlParams.tsx":"8"},{"size":354,"mtime":1608297941424,"results":"9","hashOfConfig":"10"},{"size":720,"mtime":1608303143303,"results":"11","hashOfConfig":"10"},{"size":206,"mtime":1608173969332,"results":"12","hashOfConfig":"10"},{"size":3314,"mtime":1608300086687,"results":"13","hashOfConfig":"10"},{"size":2899,"mtime":1608299054623,"results":"14","hashOfConfig":"10"},{"size":3365,"mtime":1608299231977,"results":"15","hashOfConfig":"10"},{"size":4867,"mtime":1608303235618,"results":"16","hashOfConfig":"10"},{"size":1058,"mtime":1608298927236,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"cjmwwa",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/index.tsx",[],["38","39"],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/api/index.ts",[],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/helpers/getRandomColor.ts",[],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Drawer.tsx",["40"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\n\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  list: {\n    width: 450,\n    display: \"flex\",\n    justifyCcontent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\ninterface DrawerProps {\n  drawerIsOpening: boolean;\n  closeDrawer: () => void;\n  openDrawer: () => void;\n}\n\nexport default function Drawer({\n  drawerIsOpening,\n  closeDrawer,\n  openDrawer,\n}: DrawerProps) {\n  const userName = localStorage.getItem(\"userName\");\n  const location = localStorage.getItem(\"location\");\n  const bio = localStorage.getItem(\"bio\");\n  const avatar = localStorage.getItem(\"avatar\");\n  const url = localStorage.getItem(\"url\");\n  const isLogged = localStorage.getItem(\"accessToken\");\n\n  const textFields = [userName, location, bio];\n\n  const classes = useStyles();\n  const [state, setState] = React.useState<{ [key: string]: boolean }>({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor: any, open: any) => (event: any) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const list = (anchor: any) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      {isLogged ? (\n        <>\n          <img\n            style={{ width: 130, height: 130, borderRadius: 65, marginTop: 40 }}\n            src={avatar as string}\n            alt=\"Usuário avatar\"\n          />\n          {textFields.map((field) => (\n            <Typography key={field} style={{ marginTop: 10 }} variant=\"body1\">\n              {field}\n            </Typography>\n          ))}\n          <Button\n            style={{ marginTop: 20 }}\n            onClick={() => {\n              localStorage.clear();\n              window.location.href = window.location.href.replace(\n                window.location.search,\n                \"\"\n              );\n            }}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Logout\n          </Button>\n        </>\n      ) : (\n        <>\n          <AccountCircleIcon style={{ fontSize: 130 }} />\n          <List>\n            <Button\n              onClick={() => {\n                window.location.href = `${process.env.REACT_APP_API_URL}/login`;\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Login\n            </Button>\n          </List>{\" \"}\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <SwipeableDrawer\n        anchor=\"left\"\n        open={drawerIsOpening}\n        onClose={closeDrawer}\n        onOpen={openDrawer}\n      >\n        {list(\"left\")}\n      </SwipeableDrawer>\n    </div>\n  );\n}\n","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/index.tsx",[],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/screens/Home/Header.tsx",["41"],"import React, { useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useDebounce } from \"use-debounce\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\ninterface HeaderProps {\n  openDrawer: () => void;\n  searchValue: string;\n  searchOnChange: any;\n  handleSubmit: () => void;\n}\n\nexport default function SearchAppBar({\n  openDrawer,\n  searchOnChange,\n  searchValue,\n  handleSubmit,\n}: HeaderProps) {\n  const classes = useStyles();\n\n  const [value] = useDebounce(searchValue, 1000);\n\n  useEffect(() => {\n    if (value === searchValue) return handleSubmit();\n  }, [value, searchValue]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Github Repositories List\n          </Typography>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              handleSubmit();\n            }}\n            className={classes.search}\n          >\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchValue}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(item) => searchOnChange(item.currentTarget.value)}\n            />\n          </form>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/RepositoryItem.tsx",["42","43","44"],"/Users/matheus/Work/Sysmap/github-repositories-list/front/src/components/UrlParams.tsx",[],["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":38,"column":9,"nodeType":"53","messageId":"54","endLine":38,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":86,"column":6,"nodeType":"57","endLine":86,"endColumn":26,"suggestions":"58"},{"ruleId":"51","severity":1,"message":"59","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":17},{"ruleId":"51","severity":1,"message":"60","line":16,"column":8,"nodeType":"53","messageId":"54","endLine":16,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":65,"column":36,"nodeType":"63","endLine":65,"endColumn":51},{"ruleId":"47","replacedBy":"64"},{"ruleId":"49","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array. If 'handleSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["68"],"'CardMedia' is defined but never used.","'ShareIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [value, searchValue, handleSubmit]",{"range":"71","text":"72"},[2146,2166],"[value, searchValue, handleSubmit]"]